"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const Negotiator = require("negotiator");
const intlLocalematcher = require("@formatjs/intl-localematcher");
const createLocaleRedirect = async (config) => {
  const repository = await config.client.getRepository();
  const locales = repository.languages.map((language) => {
    var _a;
    return ((_a = config.localeOverrides) == null ? void 0 : _a[language.id]) ?? language.id;
  });
  const defaultLocale = locales[0];
  const { pathname } = config.request.nextUrl;
  const pathnameHasLocale = locales.some((locale2) => pathname.startsWith(`/${locale2}/`) || pathname === `/${locale2}`);
  if (pathnameHasLocale) {
    return;
  }
  let locale = defaultLocale;
  const headers = {
    "accept-language": config.request.headers.get("accept-language") ?? void 0
  };
  if (headers["accept-language"]) {
    const languages = new Negotiator({ headers }).languages();
    locale = intlLocalematcher.match(languages, locales, defaultLocale);
  }
  if (locale === defaultLocale && config.omitDefaultLocale) {
    return;
  }
  config.request.nextUrl.pathname = `/${locale}${pathname}`;
  return Response.redirect(config.request.nextUrl);
};
exports.createLocaleRedirect = createLocaleRedirect;
//# sourceMappingURL=createLocaleRedirect.cjs.map
