"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("react/jsx-runtime");
const Script = require("next/script");
const headers = require("next/headers");
const router = require("next/router");
const PrismicPreviewClient = require("./PrismicPreviewClient.cjs");
const getToolbarSrc = require('./_node_modules/@prismicio/client/dist/getToolbarSrc.cjs');
function PrismicPreview({ repositoryName, children, ...props }) {
  const toolbarSrc = getToolbarSrc.getToolbarSrc(repositoryName);
  let isDraftMode = false;
  const result = jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [children, jsxRuntime.jsx(PrismicPreviewClient.PrismicPreviewClient, { repositoryName, isDraftMode, ...props }), jsxRuntime.jsx(Script, { src: toolbarSrc, strategy: "lazyOnload" })] });
  let isAppRouter = true;
  try {
    router.useRouter();
    isAppRouter = false;
  } catch {
  }
  if (isAppRouter) {
    return new Promise(async (res) => {
      isDraftMode = (await headers.draftMode()).isEnabled;
      res(result);
    });
  }
  return result;
}
exports.PrismicPreview = PrismicPreview;
//# sourceMappingURL=PrismicPreview.cjs.map
