{"version":3,"file":"createLocaleRedirect.js","sources":["../../src/createLocaleRedirect.ts"],"sourcesContent":["import Negotiator from \"negotiator\";\nimport { match } from \"@formatjs/intl-localematcher\";\nimport * as prismic from \"@prismicio/client\";\n\nimport { NextRequestLike } from \"./types\";\n\nexport type CreateLocaleRedirectConfig = {\n\trequest: NextRequestLike;\n\tclient: Pick<prismic.Client, \"getRepository\">;\n\tlocaleOverrides?: Record<string, string>;\n\tomitDefaultLocale?: boolean;\n};\n\n/**\n * Creates a `Response` that redirects a request to the requester's preferred\n * locale. This function returns `undefined` if the request already contains a\n * locale.\n *\n * @returns A `Response` if the request should be redirected, `undefined`\n *   otherwise.\n */\nexport const createLocaleRedirect = async (\n\tconfig: CreateLocaleRedirectConfig,\n): Promise<Response | undefined> => {\n\tconst repository = await config.client.getRepository();\n\n\tconst locales = repository.languages.map((language) => {\n\t\treturn config.localeOverrides?.[language.id] ?? language.id;\n\t});\n\tconst defaultLocale = locales[0];\n\n\tconst { pathname } = config.request.nextUrl;\n\tconst pathnameHasLocale = locales.some(\n\t\t(locale) => pathname.startsWith(`/${locale}/`) || pathname === `/${locale}`,\n\t);\n\n\tif (pathnameHasLocale) {\n\t\treturn;\n\t}\n\n\tlet locale = defaultLocale;\n\n\tconst headers = {\n\t\t\"accept-language\":\n\t\t\tconfig.request.headers.get(\"accept-language\") ?? undefined,\n\t};\n\n\tif (headers[\"accept-language\"]) {\n\t\tconst languages = new Negotiator({ headers }).languages();\n\t\tlocale = match(languages, locales, defaultLocale);\n\t}\n\n\tif (locale === defaultLocale && config.omitDefaultLocale) {\n\t\treturn;\n\t}\n\n\tconfig.request.nextUrl.pathname = `/${locale}${pathname}`;\n\n\treturn Response.redirect(config.request.nextUrl as URL);\n};\n"],"names":["locale"],"mappings":";;AAqBa,MAAA,uBAAuB,OACnC,WACkC;AAClC,QAAM,aAAa,MAAM,OAAO,OAAO,cAAa;AAEpD,QAAM,UAAU,WAAW,UAAU,IAAI,CAAC,aAAY;;AACrD,aAAO,YAAO,oBAAP,mBAAyB,SAAS,QAAO,SAAS;AAAA,EAAA,CACzD;AACK,QAAA,gBAAgB,QAAQ,CAAC;AAE/B,QAAM,EAAE,SAAa,IAAA,OAAO,QAAQ;AACpC,QAAM,oBAAoB,QAAQ,KACjC,CAACA,YAAW,SAAS,WAAW,IAAIA,OAAM,GAAG,KAAK,aAAa,IAAIA,OAAM,EAAE;AAG5E,MAAI,mBAAmB;AACtB;AAAA,EACA;AAED,MAAI,SAAS;AAEb,QAAM,UAAU;AAAA,IACf,mBACC,OAAO,QAAQ,QAAQ,IAAI,iBAAiB,KAAK;AAAA,EAAA;AAG/C,MAAA,QAAQ,iBAAiB,GAAG;AAC/B,UAAM,YAAY,IAAI,WAAW,EAAE,QAAS,CAAA,EAAE;AACrC,aAAA,MAAM,WAAW,SAAS,aAAa;AAAA,EAChD;AAEG,MAAA,WAAW,iBAAiB,OAAO,mBAAmB;AACzD;AAAA,EACA;AAED,SAAO,QAAQ,QAAQ,WAAW,IAAI,MAAM,GAAG,QAAQ;AAEvD,SAAO,SAAS,SAAS,OAAO,QAAQ,OAAc;AACvD;"}